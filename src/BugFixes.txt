
•	First Bug: 
The input box change in the slider value div updates the slider in the slider control div by random values and not the right value after change. 

This occurs because the value for the slider UI is set by the command sliderControl.slider('option', 'value', sliderValueInput.val) # Update Slider Widget Value
                                

The new code replacing this command is :   $('.' + this.css.sliderInner, sliderControl).slider('option', 'value', sliderValueInput.val()) # Update Slider Widget Value
        


•	Second bug:
The error message was selectable this was a simple fix all we needed to do was add a hide function after defining the error div in the create function.

•	third bug:
This occurred whenever we enter a value that would cause an error followed by clicking the image Tag  like we showed you yesterday .

To fix this the div structure had to be changed. since in your present code the error message div is held under the slider value div, on an occurrence of an error the slider value div is hidden and the slider control div is shown.
In the new structure the error div is held under the main parent div slider Container. However there are a lot of dependencies based on the div structure therefore the further changes made were:

o	The error selector in the onValueChange function was changed from 
error = error = ($ '.' + @css.errorMsg, sliderValue)    to       ($ '.' + @css.errorMsg, @element)

o	Since the error div’s position has been varied the css files also had to be changed to incorporate the new structure. The change made to the css was:


•	Even on doing the above changes, the error message is still not displayed when a value that would cause an error is entered followed by clicking the image Tag.  This is  because of the control flow ie on direct click of image tag after a change in the entry the following sequence of events occur:
      
?	First the input box change event is called. In case of an error entry this entry is validated the error message is set and displayed and the input box value is set back to a default value
?	Immediately after this the Image tag click event is called this event now uses the default value set by the change event as the value to validate and as a result does not read an error and removes the error message. Resulting in a flash of the error message rather than the usual behavior (fade out).

The only way to avoid this would be to set a timer and check the time lag between the two calls to the “onValueChanged” functions one from the input box change event handler and the other from image tag click event and ignore the second call if the calls are one after the other. For this sake we have pulled the present time at both these event handlers compared the delay and if it suggests that they are called one after the other the second validate function is bypassed.  

•	The errorMsg Css Style file was not used hence it has been removed
